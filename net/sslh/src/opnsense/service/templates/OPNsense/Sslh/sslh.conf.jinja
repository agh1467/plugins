{# /usr/local/etc/sslh.conf #}
{%  set plugin_name = 'sslh' %}
{%  if OPNsense[plugin_name] is defined %}{# Prevent configd reload from erroring out if node doesn't exist #}
{%      set cfg = OPNsense[plugin_name] %}
################################################################################
#                                                                              #
#       sslh configuration file for v1.21c                                     #
#                                                                              #
################################################################################

{# Non-options, hard-coded here #}
pidfile:"/var/run/sslh.pid";{# standard location for pid files #}
user: "nobody";{# Run as nobody for security reasons. -#}

{# Rest of the options #}
{%      if cfg['verbose'] is defined %}
verbose:{{ '1' if (cfg['verbose'] == '1') else '0' }};
{%      endif -%}

{%      if cfg['numeric'] is defined %}
numeric:{{ 'true' if (cfg['numeric'] == '1') else 'false' }};
{%      endif -%}

{%      if cfg['transparent'] is defined %}
transparent:{{ 'true' if (cfg['transparent'] == '1') else 'false' }};
{%      endif -%}

{%      if cfg['timeout'] is defined %}
timeout:{{ cfg['timeout'] }};
{%      endif -%}

{%      if cfg['on_timeout'] is defined %}
on_timeout:"{{ cfg['on_timeout'] }}";
{%      endif %}

{%      if cfg['listen_addresses'] is defined %}
{%          set listen_list = [] %}
{#          # listen_addresses is comma delimited string, split() to iterate through. #}
{%          for for_listen in cfg['listen_addresses'].split(',') %}
{#              # Need to further split the listen address by hosntmae:port #}
{%              set listen_hostname, separator, listen_port = for_listen.rpartition(':') %}
{%              if listen_hostname != '' and listen_port != '' %}
{%                  do listen_list.append('    { host: "'~listen_hostname~'"; port: "'~listen_port~'" }') %}
{%              endif %}
{%          endfor %}
{%          if listen_list != [] -%}{# Don't put this setting unless we have listen addreses to put. #}
listen:
(
{{ listen_list|join(",\n") }}
);
{%          endif %}
{%      endif %}

{# All of the protocols #}
protocols:
(
{%      if cfg['ssh_target'] is defined %}
{%          set hostname, separator, port = cfg['ssh_target'].rpartition(':') %}
{%          if hostname != '' and port != '' %}
     { name: "ssh";     service: "ssh"; host: "{{ hostname }}"; port: "{{ port }}";},
{%          endif %}
{%      endif %}
{%      if cfg['openvpn_target'] is defined %}
{%          set hostname, separator, port = cfg['openvpn_target'].rpartition(':') %}
{%          if hostname != '' and port != '' %}
     { name: "openvpn";                 host: "{{ hostname }}"; port: "{{ port }}";},
{%          endif %}
{%      endif %}
{%      if cfg['xmpp_target'] is defined %}
{%          set hostname, separator, port = cfg['xmpp_target'].rpartition(':') %}
{%          if hostname != '' and port != '' %}
     { name: "xmpp";                    host: "{{ hostname }}"; port: "{{ port }}";},
{%          endif %}
{%      endif %}
{%      if cfg['http_target'] is defined %}
{%          set hostname, separator, port = cfg['http_target'].rpartition(':') %}
{%          if hostname != '' and port != '' %}
     { name: "http";                    host: "{{ hostname }}"; port: "{{ port }}";},
{%          endif %}
{%      endif %}
{%      if cfg['tls_target'] is defined %}
{%          set hostname, separator, port = cfg['tls_target'].rpartition(':') %}
{%          if hostname != '' and port != '' %}
     { name: "tls";                     host: "{{ hostname }}"; port: "{{ port }}";},
{%          endif %}
{%      endif %}
{%      if cfg['anyprot_target'] is defined %}
{%          set hostname, separator, port = cfg['anyprot_target'].rpartition(':') %}
{%          if hostname != '' and port != '' %}
     { name: "anyprot";                 host: "{{ hostname }}"; port: "{{ port }}";},
{%          endif %}
{%      endif %}
);
{%  endif %}
